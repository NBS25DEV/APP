import React from 'react';
import { motion } from 'framer-motion';
import { Button } from '@/components/ui/button';
import { ArrowRight, Star, TrendingUp } from 'lucide-react';

export default function ParentsDashboard({ onClose, type = 'pronunciation', data = {} }) {
  const pronunciationData = {
    overallAccuracy: 85,
    lettersLearned: 18,
    totalLetters: 22,
    bestLetters: ['א', 'ב', 'ג', 'ד'],
    needsWork: ['ח', 'צ', 'ר'],
    recordings: []
  };

  const writingData = {
    overallAccuracy: 72,
    lettersCompleted: 15,
    totalLetters: 22,
    bestLetters: ['א', 'ב', 'מ', 'ש'],
    needsWork: ['ע', 'צ', 'ף'],
    tips: [
      'א - התחילו מלמעלה ימינה, קו ישר למטה',
      'ע - עיגול עם פתח בצד שמאל',
      'צ - כמו נ עם קו קטן למטה'
    ]
  };

  const currentData = type === 'pronunciation' ? pronunciationData : writingData;

  return (
    <motion.div
      initial={{ opacity: 0 }}
      animate={{ opacity: 1 }}
      exit={{ opacity: 0 }}
      className="fixed inset-0 bg-black/50 flex items-center justify-center z-50 p-4"
    >
      <motion.div
        initial={{ scale: 0.9, y: 20 }}
        animate={{ scale: 1, y: 0 }}
        className="bg-white rounded-3xl p-8 max-w-2xl w-full shadow-2xl max-h-[90vh] overflow-y-auto"
      >
        {/* כותרת */}
        <div className="flex items-center justify-between mb-8">
          <h2 className="text-3xl font-bold text-gray-800">
            {type === 'pronunciation' ? 'דוח הגייה' : 'דוח כתיבה'}
          </h2>
          <Button
            onClick={onClose}
            variant="ghost"
            className="rounded-full w-10 h-10 p-0 text-gray-500 hover:text-gray-700"
          >
            ✕
          </Button>
        </div>

        {/* סטטיסטיקות כלליות */}
        <div className="grid md:grid-cols-2 gap-6 mb-8">
          <div className="bg-blue-50 rounded-2xl p-6">
            <div className="flex items-center gap-3 mb-3">
              <div className="w-12 h-12 bg-blue-500 rounded-full flex items-center justify-center">
                <TrendingUp className="w-6 h-6 text-white" />
              </div>
              <div>
                <h3 className="font-bold text-gray-800">דיוק כללי</h3>
                <p className="text-2xl font-bold text-blue-600">
                  {currentData.overallAccuracy}%
                </p>
              </div>
            </div>
          </div>

          <div className="bg-green-50 rounded-2xl p-6">
            <div className="flex items-center gap-3 mb-3">
              <div className="w-12 h-12 bg-green-500 rounded-full flex items-center justify-center">
                <Star className="w-6 h-6 text-white" />
              </div>
              <div>
                <h3 className="font-bold text-gray-800">התקדמות</h3>
                <p className="text-2xl font-bold text-green-600">
                  {type === 'pronunciation' ? currentData.lettersLearned : currentData.lettersCompleted}/
                  {currentData.totalLetters}
                </p>
              </div>
            </div>
          </div>
        </div>

        {/* אותיות מצוינות */}
        <div className="mb-8">
          <h3 className="text-xl font-bold text-gray-800 mb-4 flex items-center gap-2">
            <span className="text-2xl">🌟</span>
            אותיות מצוינות
          </h3>
          <div className="flex flex-wrap gap-3">
            {currentData.bestLetters.map((letter, index) => (
              <div key={index} className="bg-yellow-100 text-yellow-800 px-4 py-2 rounded-full font-bold text-lg">
                {letter}
              </div>
            ))}
          </div>
        </div>

        {/* אותיות לשיפור */}
        <div className="mb-8">
          <h3 className="text-xl font-bold text-gray-800 mb-4 flex items-center gap-2">
            <span className="text-2xl">💪</span>
            אותיות לתרגול נוסף
          </h3>
          <div className="flex flex-wrap gap-3 mb-4">
            {currentData.needsWork.map((letter, index) => (
              <div key={index} className="bg-orange-100 text-orange-800 px-4 py-2 rounded-full font-bold text-lg">
                {letter}
              </div>
            ))}
          </div>
        </div>

        {/* טיפים לכתיבה */}
        {type === 'writing' && currentData.tips && (
          <div className="mb-8">
            <h3 className="text-xl font-bold text-gray-800 mb-4 flex items-center gap-2">
              <span className="text-2xl">💡</span>
              טיפים לשיפור
            </h3>
            <div className="space-y-3">
              {currentData.tips.map((tip, index) => (
                <div key={index} className="bg-blue-50 p-4 rounded-xl">
                  <p className="text-gray-700">{tip}</p>
                </div>
              ))}
            </div>
          </div>
        )}

        {/* כפתור חזור */}
        <div className="text-center">
          <Button
            onClick={onClose}
            className="bg-purple-500 hover:bg-purple-600 text-white px-8 py-4 rounded-2xl text-lg flex items-center gap-2 mx-auto"
          >
            <ArrowRight className="w-5 h-5" />
            חזור ללמידה
          </Button>
        </div>
      </motion.div>
    </motion.div>
  );
}
