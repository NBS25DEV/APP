
import React, { useState } from 'react';
import { motion } from 'framer-motion';
import { Star } from 'lucide-react';

export default function LetterCard({ letter, onPlay, onMicClick, index, proficiency, hasTriedWriting }) {
  const [isPlaying, setIsPlaying] = useState(false);

  const handlePlay = async (e) => {
    e.stopPropagation();
    if (isPlaying) return;
    
    setIsPlaying(true);
    await onPlay(letter, () => {
        setTimeout(() => setIsPlaying(false), 500);
    });
  };

  const colors = [
    'from-sky-300 to-sky-400',
    'from-rose-300 to-rose-400', 
    'from-amber-300 to-amber-400',
    'from-emerald-300 to-emerald-400',
    'from-violet-300 to-violet-400',
    'from-lime-300 to-lime-400'
  ];
  const cardColor = colors[index % colors.length];

  return (
    <motion.div
      initial={{ opacity: 0, scale: 0.5 }}
      animate={{ opacity: 1, scale: 1 }}
      transition={{ 
        duration: 0.5, 
        delay: index * 0.05,
        type: 'spring',
        stiffness: 260,
        damping: 20
      }}
      whileHover={{ scale: 1.05, rotate: 2 }}
      whileTap={{ scale: 0.95 }}
      className="relative cursor-pointer"
      onClick={handlePlay}
    >
      <div className={`relative bg-gradient-to-br ${cardColor} rounded-3xl p-4 md:p-6 shadow-xl hover:shadow-2xl transition-all duration-300 border-4 border-white/70 overflow-hidden group min-h-[220px] md:min-h-[260px]`}>
        <div className="absolute inset-0 flex items-center justify-center pointer-events-none">
          {isPlaying && [...Array(6)].map((_, i) => (
            <motion.div key={i} className="absolute text-3xl"
              initial={{ scale: 0, opacity: 1, rotate: Math.random() * 360 }}
              animate={{ scale: 2, opacity: 0, y: (Math.random() - 0.5) * 150, x: (Math.random() - 0.5) * 150 }}
              transition={{ duration: 0.8, delay: i * 0.1, ease: 'easeOut' }}
            >
              âœ¨
            </motion.div>
          ))}
        </div>
        
        <div className="relative z-10 text-center h-full flex flex-col justify-around">
          <motion.div 
            className={`text-6xl md:text-8xl font-black drop-shadow-lg select-none ${hasTriedWriting ? 'text-blue-200' : 'text-white'}`} 
            style={{ fontFamily: 'Varela Round, sans-serif' }}
            animate={isPlaying ? { scale: [1, 1.2, 1] } : {}}
            transition={{ duration: 0.6, type: 'spring' }}
          >
            {letter.letter}
          </motion.div>
          
          <motion.div className="text-5xl md:text-6xl select-none"
            animate={isPlaying ? { rotate: [0, 15, -15, 15, 0], scale: [1, 1.1, 1] } : {}}
            transition={{ duration: 0.8, type: 'spring' }}
          >
            {letter.icon}
          </motion.div>
          
          <div className="text-xl md:text-2xl font-bold text-white drop-shadow-sm">
            {letter.name}
          </div>
        </div>

        {/* Proficiency Stars */}
        <div className="absolute bottom-2 left-2 flex gap-1">
            {[1, 2, 3].map(i => (
                <Star key={i} className={`w-4 h-4 transition-colors ${i <= proficiency ? 'text-yellow-400 fill-yellow-400' : 'text-white/30'}`} />
            ))}
        </div>
      </div>
    </motion.div>
  );
}
